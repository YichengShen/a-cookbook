{"version":3,"file":"3fff1979-bad6f62534295c3d39aa.js","mappings":"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","sources":["webpack://a-cookbook/./node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = \"animation-\".concat(transition);\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {}\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins,\n    localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  let {\n    plugins,\n    localIds\n  } = _ref2;\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  let {\n    plugin,\n    local\n  } = _ref3;\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[\"datasets.\".concat(datasetType), '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), () => [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), () => [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), () => [[\"plugins.\".concat(id), ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {\n      _active,\n      _lastEvent\n    } = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref5 => {\n    let {\n      start,\n      end\n    } = _ref5;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref6 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref6;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref7) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref7;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return this._cache.data = this.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };"],"names":["animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","arguments","length","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","d","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","concat","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","_ref","ratio","inflateAmount","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","rotation","_getCircumference","circumference","_getRotationExtents","T","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","j","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","w","h","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","interaction","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getIntersectItems","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","outerStartX","outerStartY","outerEndX","outerEndY","borderJoinStyle","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","_ref7","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}